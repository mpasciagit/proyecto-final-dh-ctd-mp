# Estructura del proyecto (src y subcarpetas)

frontend-cliente/
└── src/
    ├── App.css
    ├── App.jsx
    ├── index.css
    ├── main.jsx
    ├── assets/
    │   └── react.svg
    ├── components/
    │   ├── AdvancedFilters.jsx
    │   ... (resto de componentes)
    ├── config/
    │   └── api.js
    ├── context/
    │   ...
    ├── hooks/
    │   ...
    ├── pages/
    │   ...
    ├── services/
    │   ...
    └── utils/
        ...

# Resúmenes detallados de archivos (por orden alfabético)

## App.css
Archivo de estilos globales para la app. Define el layout principal del root, animaciones para el logo, estilos para tarjetas y clases utilitarias. Incluye media queries para animación y estilos para clases como .logo, .card y .read-the-docs.

## App.jsx
Componente raíz de la app. Envuelve toda la aplicación en un ErrorBoundary para capturar errores de renderizado y renderiza el componente Router, que gestiona las rutas principales de la app.

## assets/react.svg
Archivo SVG del logo de React, usado como imagen decorativa o de branding en la UI.

## index.css
Estilos globales y utilidades. Importa TailwindCSS, define la fuente principal, color de fondo y estilos personalizados para el componente React DatePicker (inputs, calendario, navegación, etc). Incluye reglas para mejorar la apariencia y accesibilidad de los inputs y el calendario.

## main.jsx
Punto de entrada de la app. Renderiza el componente App dentro de React.StrictMode. Si está en modo desarrollo, ejecuta createMockReservations para poblar datos de prueba. Importa los estilos globales y monta la app en el elemento root del DOM.

## components/AdvancedFilters.jsx
Componente de filtros avanzados para listados de productos. Permite filtrar por marca, categoría, ubicación, transmisión, combustible, precio, pasajeros, rating, características y opciones adicionales (como solo disponibles, con GPS, aire acondicionado). Usa hooks para manejar el estado de expansión y la cantidad de filtros activos. Renderiza controles de UI para cada filtro y muestra el número de resultados encontrados. Incluye botones para limpiar y aplicar filtros. El componente es extenso y modular, con lógica para manejar cambios en cada tipo de filtro y mostrar el resumen de filtros activos.

# (continúa...)
